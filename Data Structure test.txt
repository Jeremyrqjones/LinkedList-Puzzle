I have a class Person, with the fields firstname, lastname, age and zipcode. 
I need to store a large collection of these Person objects in memory. 
I need to be able to add and delete items, in addition to being able to sort and search by any of the fields. 

Describe a memory and performance efficient data structure and mechanism to accomplish this. 
Use one or more of English, diagrams (PNG/JPEG), pseudo-code, C#, Javascript or Python to demonstrate how you would accomplish this. 



For this problem I would consider using a Linked List data structure.  A linked list is memory efficient in the since that once created the object itself doesn't move
around in memory.  In a linked list each object is stored on the heap as oposed to an array which is stored on the stack and is a physicaly contiguas block of memory.
if an array is changed, such as a sort, a new array is created and the data transfered to this new array.  This can become a problem with very large collections.
A linked list however is not contiguous and a sort, insert or other changes are just moving pointers around. With very large collections This can make the performance
of linked lists very good in comparison to an array. 

In my example I have implemented a doubly linked list written in C#.  I did a console app for simplicity so you guys could just copy one file and run it.  There are also a few
small test that write to the console.   


