I have a class Person, with the fields firstname, lastname, age and zipcode. 
I need to store a large collection of these Person objects in memory. 
I need to be able to add and delete items, in addition to being able to sort and search by any of the fields. 

Describe a memory and performance efficient data structure and mechanism to accomplish this. 
Use one or more of English, diagrams (PNG/JPEG), pseudo-code, C#, Javascript or Python to demonstrate how you would accomplish this. 

For this problem I am making the assumtion that adding and deleting will be very frequent.

For this problem I would consider using a Linked List data structure. 


add(Person NewPerson, var field)
{
	add to list in correct order of field
	
	foreach(Person p in PersonList)
	{
		Start at the head and compare each p.field to NewPerson.field if lower add before current node. 
		
		if(p.field >= NewPerson.field)
		{
			PersonList.AddBefore(p, NewPerson);
			return true;
		}
		
	}
}

Since the LinkedList should always be in order, a delete should would not need a special method.

SortPersonList(LinkedList LL, var SortVariable)
{

foreach(Person p in LL)
	{

		Start at the head and compare each if lower add before current node. 
		
		if(p.SortVariable >= CurrentNode.SortVariable)
		{
			LL.AddBefore(p, CurrentNode);
			
		}
		
	
	}
}